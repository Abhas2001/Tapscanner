{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\Desktop\\\\naya\\\\my-app\\\\src\\\\Pdf.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport html2pdf from \"html2pdf.js\";\nimport './pdf.css';\nimport ima from './images/dummy.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pdf = props => {\n  _s();\n  const contentRef = useRef();\n  const exportHTMLtoPDF = () => {\n    const element = contentRef.current; // Access the component using the ref\n\n    // Wait for the image to load before generating the PDF\n    const imgElement = element.querySelector('img');\n    if (imgElement.complete) {\n      // If the image is already loaded, generate the PDF\n      html2pdf().from(element).save('exported_file.pdf');\n    } else {\n      // Wait for the image to load and then generate the PDF\n      imgElement.onload = () => {\n        html2pdf().from(element).save('exported_file.pdf');\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: contentRef,\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img\",\n          src: props.imgaddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportHTMLtoPDF,\n        className: \"butt\",\n        children: \"Export to PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Pdf, \"76RymMQDwORkpkOdsElhIIY+DNc=\");\n_c = Pdf;\nexport default Pdf;\nvar _c;\n$RefreshReg$(_c, \"Pdf\");","map":{"version":3,"names":["React","useRef","html2pdf","ima","jsxDEV","_jsxDEV","Pdf","props","_s","contentRef","exportHTMLtoPDF","element","current","imgElement","querySelector","complete","from","save","onload","children","ref","className","src","imgaddress","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anjal/Desktop/naya/my-app/src/Pdf.jsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport html2pdf from \"html2pdf.js\";\r\nimport './pdf.css';\r\nimport ima from './images/dummy.jpg'\r\n\r\n\r\nconst Pdf = (props) => {\r\n  const contentRef = useRef(); \r\n\r\n  const exportHTMLtoPDF = () => {\r\n    const element = contentRef.current; // Access the component using the ref\r\n    \r\n    // Wait for the image to load before generating the PDF\r\n    const imgElement = element.querySelector('img');\r\n    if (imgElement.complete) {\r\n      // If the image is already loaded, generate the PDF\r\n      html2pdf().from(element).save('exported_file.pdf');\r\n    } else {\r\n      // Wait for the image to load and then generate the PDF\r\n      imgElement.onload = () => {\r\n        html2pdf().from(element).save('exported_file.pdf');\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div ref={contentRef} className=\"main\"> \r\n       \r\n        <div><img className='img' src={props.imgaddress}/></div>\r\n        <button onClick={exportHTMLtoPDF} className=\"butt\">Export to PDF</button>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pdf\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAO,WAAW;AAClB,OAAOC,GAAG,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAMC,UAAU,GAAGR,MAAM,CAAC,CAAC;EAE3B,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,OAAO,GAAGF,UAAU,CAACG,OAAO,CAAC,CAAC;;IAEpC;IACA,MAAMC,UAAU,GAAGF,OAAO,CAACG,aAAa,CAAC,KAAK,CAAC;IAC/C,IAAID,UAAU,CAACE,QAAQ,EAAE;MACvB;MACAb,QAAQ,CAAC,CAAC,CAACc,IAAI,CAACL,OAAO,CAAC,CAACM,IAAI,CAAC,mBAAmB,CAAC;IACpD,CAAC,MAAM;MACL;MACAJ,UAAU,CAACK,MAAM,GAAG,MAAM;QACxBhB,QAAQ,CAAC,CAAC,CAACc,IAAI,CAACL,OAAO,CAAC,CAACM,IAAI,CAAC,mBAAmB,CAAC;MACpD,CAAC;IACH;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAKe,GAAG,EAAEX,UAAW;MAACY,SAAS,EAAC,MAAM;MAAAF,QAAA,gBAEpCd,OAAA;QAAAc,QAAA,eAAKd,OAAA;UAAKgB,SAAS,EAAC,KAAK;UAACC,GAAG,EAAEf,KAAK,CAACgB;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxDtB,OAAA;QAAQuB,OAAO,EAAElB,eAAgB;QAACW,SAAS,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAAnB,EAAA,CA7BKF,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA+BT,eAAeA,GAAG;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}